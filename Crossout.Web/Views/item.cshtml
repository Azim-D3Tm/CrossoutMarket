@{
    Layout = "layout.cshtml";
}

@using System.Collections.Generic
@using System.Linq
@using Crossout.Model.Recipes
@using Crossout.Web
@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<Crossout.Web.Models.ItemModel>

@Html.Partial("header", null)

<div class="panel">
    <div class="panel-body">
        <table class="table table-striped table-hover table-condensed">
            <thead>
            <tr>
                <th>
                    Name
                </th>
                <th>
                    Rarity
                </th>
                <th>
                    Number
                </th>
                <th>
                    Sell Price
                </th>
                <th>
                    Sell Sum
                </th>
                <th>
                    Sell Offers
                </th>
                <th>
                    Buy Price
                </th>
                <th>
                    Buy Sum
                </th>
                <th>
                    Buy Orders
                </th>
                <th>
                    Margin
                </th>
            </tr>
            </thead>

            <tbody>
            @Html.Partial("recipepart", Model.Recipe.Recipe)

            @ShowTree(Model.Recipe.Recipe.Ingredients)

            @helper ShowTree(List<RecipeItem> items)
            {
                foreach (RecipeItem item in items)
                {
                    @Html.Partial("recipepart", item)
                    if (item != null && item.Ingredients.Count > 0)
                    {
                        @ShowTree(item.Ingredients);
                    }
                }
            }
            </tbody>
        </table>
    </div>
</div>

<script>
    function updateTree(classname,recipe, parentRecipe ,superParentRecipe, show) {
        if(classname !== 'recipe-0'){
            $('.' + classname).each(function (i, obj) {
                var currentSuperParentRecipe = $(this).data('superparentrecipe');
                var currentParentRecipe = $(this).data('parentrecipe');
                var currentRecipe = $(this).data('recipe');
                var classname2 = 'recipe-' + $(this).data('recipe');
                if (currentParentRecipe === recipe && (currentSuperParentRecipe === parentRecipe)) {
                    if (show) {
                        $(this).show();
                    } else {
                        $(this).hide();
                        $(this).find('button').removeClass('glyphicon-minus').addClass('glyphicon-plus');
                        window.updateTree(classname2, currentRecipe, currentParentRecipe, currentSuperParentRecipe, show);
                    }
                }
            });
        }
    }
</script>

@Html.Partial("chart", Model)